name: Master Branch Build And Push DockerHub

on:
  pull_request:
    types: [closed]      
    branches: 
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0      
      - name: version
        run: |
          sed -i 's/MADPT_VERSION/${{secrets.VERSION}}/g' ./Script/docker_script.sh
          sed -i 's/MADPT_VERSION/${{secrets.VERSION}}/g' ./API_container/MadPtApi/build.gradle
          sed -i 's/MADPT_VERSION/${{secrets.VERSION}}/g' ./API_container/Dockerfile
          sed -i 's/MADPT_VERSION/${{secrets.VERSION}}/g' ./API_container/MadPtApi/src/main/resources/application.yml

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: DB Container Build and Push
        uses: docker/build-push-action@v2
        with:
          file: ./DB_container/Dockerfile
          push: true
          tags: jhkimdocker/capstone_db_image:${{secrets.VERSION}}

      - name: API Container Build and Push
        uses: docker/build-push-action@v2
        with:
          file: ./API_container/Dockerfile
          push: true
          tags: jhkimdocker/capstone_api_image:${{secrets.VERSION}}
          secrets: |
            "MADPT_VERSION=${{secrets.VERSION}}"

      - name: make zip
        run: zip -r ./${{secrets.AWS_S3_DEPLOY_ITEM}} ./Script
        shell: bash
 
      - name: configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ap-northeast-2

      - name: upload s3
        run: aws s3 cp --region ap-northeast-2 ./${{secrets.AWS_S3_DEPLOY_ITEM}} s3://${{secrets.AWS_S3_BUCKET_NAME}}/${{secrets.AWS_S3_DEPLOY_ITEM}}

      - name: code deploy
        run: aws deploy create-deployment --application-name ${{secrets.AWS_CODEDEPLOY_APP_NAME}} --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name ${{secrets.AWS_CODEDEPLOY_GROUP_NAME}} --s3-location bucket=${{secrets.AWS_S3_BUCKET_NAME}},bundleType=zip,key=${{secrets.AWS_S3_DEPLOY_ITEM}}